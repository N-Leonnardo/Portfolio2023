/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 setup.gltf
Author: Brandon Westlake (https://sketchfab.com/dr.badass2142)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/retro-computer-setup-free-82eaf2047e0447a1bfea22482f1d1404
Title: Retro Computer Setup (FREE)
*/

import React, { useRef } from "react";
import { PerspectiveCamera, useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import { easing } from "maath";
import { useState } from "react";
import { useEffect } from "react";
function Rig() {
  return useFrame((state, delta) => {
    easing.damp3(
      state.camera.position,
      [0.5 + state.mouse.x, 0.15 + state.mouse.y / 2, 4],
      0.5,
      delta
    );
  });
}

export function Model(props) {
  const windowSize = useRef([window.innerWidth, window.innerHeight]);
  const [pos, setPos] = useState([-5, -15, 0]);
  const [rot, setRot] = useState([-Math.PI / 2, 0, 7.2]);

  useEffect(() => {
    if (windowSize.current[0] < 900) {
      setPos([35, 10, -35]);
      setRot([-Math.PI / 2.1, 0, 6.7]);
    }
  });

  const { nodes, materials } = useGLTF("/setup.gltf");

  if (!nodes.retro_computer_setup_retro_computer_setup_Mat_0.geometry) {
    return <progress className="progress w-56"></progress>;
  }

  return (
    <PerspectiveCamera position={[-1.5, 0, 0]}>
      <group {...props} dispose={null} scale={0.045}>
        <mesh
          geometry={
            nodes.retro_computer_setup_retro_computer_setup_Mat_0.geometry
          }
          material={materials.retro_computer_setup_Mat}
          rotation={rot}
          position={pos}
        />
      </group>
      <Rig />
    </PerspectiveCamera>
  );
}

useGLTF.preload("/setup.gltf");
